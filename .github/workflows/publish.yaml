on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: semantic syntax version of the package
        type: text
        default: v.0.0.1
      repository:
        required: true
        description: index server where to publish the package
        type: choice
        options:
          - test_pypi
          - gemfury
          - prod_pypi


jobs:
   publish:
     runs-on: ubuntu-latest
     permissions:
       id-token: write
     steps:
       - uses: actions/checkout@v3
       - name: set up Python 3.9
         uses: actions/setup-python@v4
         with:
            python-version: "3.9"

       - name: Fetch the data
         run: |
            curl https://www.openml.org/data/get_csv/16826755/phpMYEkMl --output ./classification_model/datasets/raw.csv
       - name: install tox
         run: pip install tox --user tox

       - name: Test the model
         run: |
            tox
       - name: Install pypa/build
         run: |
            pip install build --user
       - name: Build a binary wheel and a source tarball
         run: >-
             python -m
             build
             --sdist
             --wheel
             --outdir dist/

       - name: Publish distribution ðŸ“¦ to Test PyPI
         if: ${{  github.event.inputs.repository == 'test_pypi' }}
         uses: pypa/gh-action-pypi-publish@release/v1
         with:
           password: ${{ secrets.TEST_PYPI_API_TOKEN }}
           repository-url: https://test.pypi.org/legacy/


       - name: Publish to Gemfury
         if: ${{ github.event.inputs.repository == 'gemfury' }}

         run: |
           GEMFURY_TOKEN=${{ secrets.GEMFURY_TOKEN }}
           GEMFURY_USER=${{ secrets.GEMFURY_USER }}
           GEMFURY_URL=${{ secrets.GEMFURY_URL }}

           ./publish_model.sh dist

       - name: Publish distribution ðŸ“¦ to PyPI
         if: ${{ startsWith(github.ref, 'refs/tags') && github.event.inputs.repository == 'prod_pypi' }}
         uses: pypa/gh-action-pypi-publish@release/v1
         with:
           password: ${{ secrets.PROD_PYPI_API_TOKEN }}
         
